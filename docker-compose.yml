version: '3.8'

services:
  # Database Services
  mysql:
    image: mysql:8.0
    container_name: health_mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: health_monitoring
      MYSQL_USER: health_user
      MYSQL_PASSWORD: health_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./config/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - health_network

  influxdb:
    image: influxdb:2.7
    container_name: health_influxdb
    environment:
      INFLUXDB_DB: health_metrics
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: adminpassword
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - health_network

  redis:
    image: redis:7-alpine
    container_name: health_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - health_network

  # Elasticsearch & Kibana for Logging
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: health_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - health_network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.0
    container_name: health_kibana
    environment:
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - health_network

  # Federation Server
  federation-server:
    build:
      context: ./federation-server
      dockerfile: Dockerfile
    container_name: health_federation_server
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=mysql://health_user:health_password@mysql:3306/health_monitoring
    depends_on:
      - mysql
      - redis
    networks:
      - health_network

  # Backend API
  backend-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: health_backend_api
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/health_monitoring
      - SPRING_DATASOURCE_USERNAME=health_user
      - SPRING_DATASOURCE_PASSWORD=health_password
      - SPRING_REDIS_HOST=redis
      - INFLUXDB_URL=http://influxdb:8086
    depends_on:
      - mysql
      - redis
      - influxdb
    networks:
      - health_network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: health_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - health_network

  grafana:
    image: grafana/grafana:latest
    container_name: health_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - health_network

volumes:
  mysql_data:
  influxdb_data:
  redis_data:
  elasticsearch_data:
  grafana_data:

networks:
  health_network:
    driver: bridge