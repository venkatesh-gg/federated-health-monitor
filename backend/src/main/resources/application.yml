server:
  port: 8080
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json

spring:
  application:
    name: health-monitoring-backend
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:development}
  
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/health_monitoring}
    username: ${SPRING_DATASOURCE_USERNAME:health_user}
    password: ${SPRING_DATASOURCE_PASSWORD:health_password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
  
  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}
      password: ${SPRING_REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 10
          max-idle: 10
          min-idle: 1
  
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:https://securetoken.google.com/health-monitoring-dev}
          jwk-set-uri: ${JWT_JWK_SET_URI:https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com}

  websocket:
    message-size-limit: 65536
    send-buffer-size-limit: 512000

logging:
  level:
    com.healthmonitoring: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:WARN}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${SQL_PARAM_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Application specific configuration
app:
  jwt:
    secret: ${JWT_SECRET:health-monitoring-secret-key-change-in-production}
    expiration: ${JWT_EXPIRATION:86400000} # 24 hours
  
  firebase:
    project-id: ${FIREBASE_PROJECT_ID:health-monitoring-dev}
    credentials-path: ${FIREBASE_CREDENTIALS_PATH:}
  
  influxdb:
    url: ${INFLUXDB_URL:http://localhost:8086}
    token: ${INFLUXDB_TOKEN:development-token}
    org: ${INFLUXDB_ORG:health-monitoring}
    bucket: ${INFLUXDB_BUCKET:health-metrics}
  
  federation:
    server-url: ${FEDERATION_SERVER_URL:http://localhost:5000}
    api-key: ${FEDERATION_API_KEY:development-api-key}
  
  websocket:
    allowed-origins: ${WEBSOCKET_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}
  
  security:
    cors:
      allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}
      allowed-methods: GET,POST,PUT,DELETE,PATCH,OPTIONS
      allowed-headers: "*"
      allow-credentials: true
  
  monitoring:
    health-check-interval: ${HEALTH_CHECK_INTERVAL:60} # seconds
    metrics-retention-days: ${METRICS_RETENTION_DAYS:90}
    alert-check-interval: ${ALERT_CHECK_INTERVAL:300} # 5 minutes

---
# Development profile
spring:
  config:
    activate:
      on-profile: development
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  
  h2:
    console:
      enabled: true

logging:
  level:
    com.healthmonitoring: DEBUG
    org.springframework.security: DEBUG

---
# Docker profile
spring:
  config:
    activate:
      on-profile: docker
  
  datasource:
    url: jdbc:mysql://mysql:3306/health_monitoring
  
  data:
    redis:
      host: redis

app:
  influxdb:
    url: http://influxdb:8086
  
  federation:
    server-url: http://federation-server:5000